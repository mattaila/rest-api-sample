openapi: "3.0.3"
info:
  title: TODO API
  version: "1.0"
  description: "TODOアプリケーション"
tags:
  - name: opts
    description: 運用監視関連のAPI
  - name: tasks
    description: タスク関連API

paths:
  /health:
    get:
      tags:
        - opts
      responses:
        "200":
          description: OK
  /tasks/:
    get:
      summary: "タスク一覧取得"
      description: "タスクの一覧を取得する"
      operationId: listTasks
      tags:
        - tasks
      parameters:
        - name: limit
          in: query
          required: true
          description: "リストに含まれるリソースの最大値"
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          required: true
          description: "オフセット"
          schema:
            type: integer
            format: int64
            minimum: 0
            default: 0
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskListDTO"

        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
    post:
      summary: "タスク作成"
      description: "タスクを新規作成します"
      operationId: createTask
      tags:
        - tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskForm"
      responses:
        201:
          description: "タスク作成"
          headers:
            location:
              description: "作成されたリソースのURI"
              schema: 
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDTO"

        400:
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"

  /tasks/{taskId}:
    get:
      summary: "タスク取得"
      description: "タスクを取得する"
      operationId: showTask
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          description: "詳細を取得するタスクのID"
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskDTO"
        '404':
          description: "404 Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
    put:
      summary: "タスクの更新"
      description: "タスクの更新"
      operationId: updateTask
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          description: "更新するタスクのID"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskForm"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema: 
                $ref: "#/components/schemas/TaskDTO"
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
    delete:
      summary: "タスク削除"
      description: "タスクを削除する"
      operationId: deleteTask
      tags:
        - tasks
      parameters:
        - name: taskId
          in: path
          description: "更新するタスクのID"
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: "Not Content"
        '404': 
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundError"
components:
  schemas:
    TaskDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: "タスクID"
        title:
          type: string
          description: "タイトル"
      required:
        - id
        - title
    TaskListDTO:
      description: "タスクのリスト"
      type: object
      properties:
        page:
          $ref: "#/components/schemas/PageDTO"
        results:
          type: array
          items:
            $ref: "#/components/schemas/TaskDTO"
      required:
        - results

    TaskForm:
      type: object
      properties:
        title:
          type: string
          description: "作成されるタスクのタイトル"
          maxLength: 256
          minLength: 1
      required:
        - title
    ResourceNotFoundError:
      description: "指定リソースが存在しない"
      type: object
      properties:
        title: 
          type: string
          description: "エラーのタイトル"
          default: "resource not found"
        detail:
          type: string
          description: "エラー詳細"
      required:
        - title
        - detail

    BadRequestError:
      description: "リクエストが不正"
      type: object
      properties:
        title: 
          type: string
          description: "エラーのタイトル"
          default: "Bad Request"
        detail:
          type: string
          description: "エラーの詳細"
          default: "リクエストが不正です"
        invalid-params:
          type: array
          items:
            $ref: "#/components/schemas/InvalidParam"
      required:
        - title
        - detail
        - invalid-params

    InvalidParam:
      description: "不正なリクエストについての詳細"
      type: object
      properties:
        name: 
          type: string
          description: "エラーが発生したフィールド名"
        reason:
          type: string
          description: "エラー原因"
      required:
        - name
        - reason

    PageDTO:
      description: "ページング情報"
      type: object
      properties:
        limit:
          type: integer
          format: int32
          description: "リクエストされたlimit"
        offset:
          type: integer
          format: int64
          description: "リクエストされたoffset"
        size:
          type: integer
          format: int32
          description: "取得できた件数"
      required:
        - limit
        - offset
        - size